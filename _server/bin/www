#!/usr/bin/env node

require('dotenv').config();
require('console-stamp')(console, '[dd/mm HH:MM:ss.l]');
const app = require('../app');
const debug = require('debug')('onebin:server');
const http = require('http');
const OneBinPLC = require('../plc/OneBinPLC');
const socket = require('../socket/socketServer');
const plc = new OneBinPLC('10.8.66.100', 0, 1);

let port = process.env.SERVER_PORT;
app.set('port', port);

const server = http.createServer(app);

plc.connect();
socket.connect(server);

setInterval(() => {        
    plc.getTrigger().then(r => socket.emit('plc',r));    
}, 2000);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string' ?
        'Pipe ' + port :
        'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
    
    var addr = server.address();
    var bind = typeof addr === 'string' ?
        'pipe ' + addr :
        'port ' + addr.port;
    debug('Listening on ' + bind);
    console.log('Server running at: ', addr);
}